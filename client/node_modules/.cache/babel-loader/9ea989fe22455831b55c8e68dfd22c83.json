{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nimport _isNil from \"lodash/isNil\";\nimport _isFunction from \"lodash/isFunction\";\nimport _uniqBy from \"lodash/uniqBy\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/**\n * @fileOverview Tooltip\n */\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { translateStyle } from 'react-smooth';\nimport classNames from 'classnames';\nimport { DefaultTooltipContent } from './DefaultTooltipContent';\nimport { Global } from '../util/Global';\nimport { isNumber } from '../util/DataUtils';\nvar CLS_PREFIX = 'recharts-tooltip-wrapper';\nvar EPS = 1;\nfunction defaultUniqBy(entry) {\n  return entry.dataKey;\n}\nfunction getUniqPayload(option, payload) {\n  if (option === true) {\n    return _uniqBy(payload, defaultUniqBy);\n  }\n  if (_isFunction(option)) {\n    return _uniqBy(payload, option);\n  }\n  return payload;\n}\nfunction renderContent(content, props) {\n  if ( /*#__PURE__*/React.isValidElement(content)) {\n    return /*#__PURE__*/React.cloneElement(content, props);\n  }\n  if (_isFunction(content)) {\n    return /*#__PURE__*/React.createElement(content, props);\n  }\n  return /*#__PURE__*/React.createElement(DefaultTooltipContent, props);\n}\nvar tooltipDefaultProps = {\n  active: false,\n  allowEscapeViewBox: {\n    x: false,\n    y: false\n  },\n  reverseDirection: {\n    x: false,\n    y: false\n  },\n  offset: 10,\n  viewBox: {\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0\n  },\n  coordinate: {\n    x: 0,\n    y: 0\n  },\n  // this doesn't exist on TooltipProps\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  cursorStyle: {},\n  separator: ' : ',\n  wrapperStyle: {},\n  contentStyle: {},\n  itemStyle: {},\n  labelStyle: {},\n  cursor: true,\n  trigger: 'hover',\n  isAnimationActive: !Global.isSsr,\n  animationEasing: 'ease',\n  animationDuration: 400,\n  filterNull: true,\n  useTranslate3d: false\n};\nexport var Tooltip = function Tooltip(props) {\n  var _classNames;\n  var _useState = useState(-1),\n    _useState2 = _slicedToArray(_useState, 2),\n    boxWidth = _useState2[0],\n    setBoxWidth = _useState2[1];\n  var _useState3 = useState(-1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    boxHeight = _useState4[0],\n    setBoxHeight = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    dismissed = _useState6[0],\n    setDismissed = _useState6[1];\n  var _useState7 = useState({\n      x: 0,\n      y: 0\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    dismissedAtCoordinate = _useState8[0],\n    setDismissedAtCoordinate = _useState8[1];\n  var wrapperNode = useRef();\n  var allowEscapeViewBox = props.allowEscapeViewBox,\n    reverseDirection = props.reverseDirection,\n    coordinate = props.coordinate,\n    offset = props.offset,\n    position = props.position,\n    viewBox = props.viewBox;\n  var handleKeyDown = useCallback(function (event) {\n    if (event.key === 'Escape') {\n      setDismissed(true);\n      setDismissedAtCoordinate(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          x: coordinate === null || coordinate === void 0 ? void 0 : coordinate.x,\n          y: coordinate === null || coordinate === void 0 ? void 0 : coordinate.y\n        });\n      });\n    }\n  }, [coordinate === null || coordinate === void 0 ? void 0 : coordinate.x, coordinate === null || coordinate === void 0 ? void 0 : coordinate.y]);\n  useEffect(function () {\n    var updateBBox = function updateBBox() {\n      if (dismissed) {\n        document.removeEventListener('keydown', handleKeyDown);\n        if ((coordinate === null || coordinate === void 0 ? void 0 : coordinate.x) !== dismissedAtCoordinate.x || (coordinate === null || coordinate === void 0 ? void 0 : coordinate.y) !== dismissedAtCoordinate.y) {\n          setDismissed(false);\n        }\n      } else {\n        document.addEventListener('keydown', handleKeyDown);\n      }\n      if (wrapperNode.current && wrapperNode.current.getBoundingClientRect) {\n        var box = wrapperNode.current.getBoundingClientRect();\n        if (Math.abs(box.width - boxWidth) > EPS || Math.abs(box.height - boxHeight) > EPS) {\n          setBoxWidth(box.width);\n          setBoxHeight(box.height);\n        }\n      } else if (boxWidth !== -1 || boxHeight !== -1) {\n        setBoxWidth(-1);\n        setBoxHeight(-1);\n      }\n    };\n    updateBBox();\n    return function () {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [boxHeight, boxWidth, coordinate, dismissed, dismissedAtCoordinate.x, dismissedAtCoordinate.y, handleKeyDown]);\n  var getTranslate = function getTranslate(_ref) {\n    var key = _ref.key,\n      tooltipDimension = _ref.tooltipDimension,\n      viewBoxDimension = _ref.viewBoxDimension;\n    if (position && isNumber(position[key])) {\n      return position[key];\n    }\n    var negative = coordinate[key] - tooltipDimension - offset;\n    var positive = coordinate[key] + offset;\n    if (allowEscapeViewBox !== null && allowEscapeViewBox !== void 0 && allowEscapeViewBox[key]) {\n      return reverseDirection[key] ? negative : positive;\n    }\n    if (reverseDirection !== null && reverseDirection !== void 0 && reverseDirection[key]) {\n      var _tooltipBoundary = negative;\n      var _viewBoxBoundary = viewBox[key];\n      if (_tooltipBoundary < _viewBoxBoundary) {\n        return Math.max(positive, viewBox[key]);\n      }\n      return Math.max(negative, viewBox[key]);\n    }\n    var tooltipBoundary = positive + tooltipDimension;\n    var viewBoxBoundary = viewBox[key] + viewBoxDimension;\n    if (tooltipBoundary > viewBoxBoundary) {\n      return Math.max(negative, viewBox[key]);\n    }\n    return Math.max(positive, viewBox[key]);\n  };\n  var payload = props.payload,\n    payloadUniqBy = props.payloadUniqBy,\n    filterNull = props.filterNull,\n    active = props.active,\n    wrapperStyle = props.wrapperStyle,\n    useTranslate3d = props.useTranslate3d,\n    isAnimationActive = props.isAnimationActive,\n    animationDuration = props.animationDuration,\n    animationEasing = props.animationEasing;\n  var finalPayload = getUniqPayload(payloadUniqBy, filterNull && payload && payload.length ? payload.filter(function (entry) {\n    return !_isNil(entry.value);\n  }) : payload);\n  var hasPayload = finalPayload && finalPayload.length;\n  var content = props.content;\n  var outerStyle = _objectSpread({\n    pointerEvents: 'none',\n    visibility: !dismissed && active && hasPayload ? 'visible' : 'hidden',\n    position: 'absolute',\n    top: 0,\n    left: 0\n  }, wrapperStyle);\n  var translateX, translateY;\n  if (position && isNumber(position.x) && isNumber(position.y)) {\n    translateX = position.x;\n    translateY = position.y;\n  } else if (boxWidth > 0 && boxHeight > 0 && coordinate) {\n    translateX = getTranslate({\n      key: 'x',\n      tooltipDimension: boxWidth,\n      viewBoxDimension: viewBox.width\n    });\n    translateY = getTranslate({\n      key: 'y',\n      tooltipDimension: boxHeight,\n      viewBoxDimension: viewBox.height\n    });\n  } else {\n    outerStyle.visibility = 'hidden';\n  }\n  outerStyle = _objectSpread(_objectSpread({}, translateStyle({\n    transform: useTranslate3d ? \"translate3d(\".concat(translateX, \"px, \").concat(translateY, \"px, 0)\") : \"translate(\".concat(translateX, \"px, \").concat(translateY, \"px)\")\n  })), outerStyle);\n  if (isAnimationActive && active) {\n    outerStyle = _objectSpread(_objectSpread({}, translateStyle({\n      transition: \"transform \".concat(animationDuration, \"ms \").concat(animationEasing)\n    })), outerStyle);\n  }\n  var cls = classNames(CLS_PREFIX, (_classNames = {}, _defineProperty(_classNames, \"\".concat(CLS_PREFIX, \"-right\"), isNumber(translateX) && coordinate && isNumber(coordinate.x) && translateX >= coordinate.x), _defineProperty(_classNames, \"\".concat(CLS_PREFIX, \"-left\"), isNumber(translateX) && coordinate && isNumber(coordinate.x) && translateX < coordinate.x), _defineProperty(_classNames, \"\".concat(CLS_PREFIX, \"-bottom\"), isNumber(translateY) && coordinate && isNumber(coordinate.y) && translateY >= coordinate.y), _defineProperty(_classNames, \"\".concat(CLS_PREFIX, \"-top\"), isNumber(translateY) && coordinate && isNumber(coordinate.y) && translateY < coordinate.y), _classNames));\n  return /*#__PURE__*/(\n    // ESLint is disabled to allow listening to the `Escape` key. Refer to\n    // https://github.com/recharts/recharts/pull/2925\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n    React.createElement(\"div\", {\n      tabIndex: -1,\n      role: \"dialog\",\n      className: cls,\n      style: outerStyle,\n      ref: wrapperNode\n    }, renderContent(content, _objectSpread(_objectSpread({}, props), {}, {\n      payload: finalPayload\n    })))\n  );\n};\n\n// needs to be set so that renderByOrder can find the correct handler function\nTooltip.displayName = 'Tooltip';\n\n/**\n * needs to be set so that renderByOrder can access an have default values for\n * children.props when there are no props set by the consumer\n * doesn't work if using default parameters\n */\nTooltip.defaultProps = tooltipDefaultProps;","map":null,"metadata":{},"sourceType":"module"}